name: Release

on:
  push:
    branches:
      - master

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          toolchain: stable

      - name: Build project
        run: cargo build --release

      - name: Zip Linux binary
        run: |
          mkdir -p release
          cp target/release/osrs-random release/
          cd release
          zip osrs-random-linux.zip osrs-random

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: osrs-random-linux
          path: release/osrs-random-linux.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          toolchain: stable-x86_64-pc-windows-msvc

      - name: Build project
        run: cargo build --release

      - name: Zip Windows binary
        run: |
          mkdir -p release
          cp target/release/osrs-random.exe release/
          cd release
          powershell -Command "Compress-Archive -Path osrs-random.exe -DestinationPath osrs-random-windows.zip"

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: osrs-random-windows
          path: release/osrs-random-windows.zip

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux binary
        uses: actions/download-artifact@v4.1.7
        with:
          name: osrs-random-linux
          path: .

      - name: Download Windows binary
        uses: actions/download-artifact@v4.1.7
        with:
          name: osrs-random-windows
          path: .

      - name: Set up version tag
        id: vars
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')
          echo "RELEASE_TAG=v$TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_NAME=Release $TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_DESC=Automatic build for commit $GITHUB_SHA." >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_DESC }}
          draft: false
          prerelease: false

      - name: Upload Linux binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./osrs-random-linux.zip
          asset_name: osrs-random-linux.zip
          asset_content_type: application/zip

      - name: Upload Windows binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./osrs-random-windows.zip
          asset_name: osrs-random-windows.zip
          asset_content_type: application/zip